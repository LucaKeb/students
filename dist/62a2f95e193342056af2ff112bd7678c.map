{"version":3,"sources":["src\\Person.ts","src\\student\\Student.ts","src\\course\\Course.ts","src\\subject\\Subject.ts","src\\database.ts","src\\student\\StudentService.ts","src\\course\\CourseService.ts","src\\student\\studentView.ts"],"names":[],"mappings":"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","file":"62a2f95e193342056af2ff112bd7678c.map","sourcesContent":["import { Address } from \"./Address\";\nexport abstract class Person {\n  readonly id: number;\n  private name: string;\n  private email!: string;\n  yearBirth!: number;\n  address!: Address;\n\n  constructor(name: string) {\n    this.name = name;\n    this.id = Math.floor(Math.random() * 50) + 5001;\n  }\n\n  getAge() {\n    return new Date().getFullYear() - this.yearBirth;\n  }\n\n  getName() {\n    return this.name;\n  }\n  getEmail() {\n    return this.email;\n  }\n  setEmail(email: string) {\n    if (!email.includes(\"@\")) {\n      throw new Error(\"Email Inválido\");\n    }\n    this.email = email;\n  }\n}\n","import { Person } from \"../Person\";\nimport { Course } from \"../course/Course\";\n\nexport class Student extends Person {\n  course: Course;\n  constructor(name: string, course: Course) {\n    super(name);\n    this.course = course;\n  }\n}\n","export class Course {\n  id: number;\n  name: string;\n\n  constructor(name: string) {\n    this.id = Math.floor(Math.random() * 5000);\n    this.name = name;\n  }\n}\n","import { Course } from \"../course/Course\";\nexport class Subject {\n  readonly id: number;\n  constructor(public name: string, public course: Course) {\n    this.name = name;\n    this.course = course;\n    this.id = Math.floor(Math.random() * 5000);\n  }\n}\n","import { Student } from \"./student/Student\";\nimport { Professor } from \"./professor/Professor\";\nimport { Course } from \"./course/Course\";\nimport { Subject } from \"./subject/Subject\";\nimport { Registry } from \"./registry/Registry\";\n\nexport const students: Student[] = [];\n\nexport const professors: Professor[] = [];\n\nconst bsi = new Course(\"BSI\");\nconst tsi = new Course(\"TSI\");\nconst licenciatura = new Course(\"Licenciatura\");\nexport const courses: Course[] = [];\ncourses.push(bsi, tsi, licenciatura);\n\nconst poo = new Subject(\"POO\", bsi);\nconst web = new Subject(\"Web\", tsi);\nexport const subjects: Subject[] = [];\nsubjects.push(poo, web);\n\nconst student1 = new Student(\"Adair\", tsi);\nconst student2 = new Student(\"Rohlig\", bsi);\nstudents.push(student1, student2);\n\nexport const registries: Registry[] = [];\n","import { Student } from \"./Student\";\nimport { students } from \"../database\";\n\nexport class StudentService {\n  saveStudent(student: Student) {\n    students.push(student);\n  }\n  listStudent() {\n    return students;\n  }\n  getById(id: number) {\n    for (const student of students) {\n      if (student.id == id) {\n        return student;\n      }\n    }\n    throw new Error(\"Estudante não Encontrado\");\n  }\n}\n","import { Course } from \"./Course\";\nimport { courses } from \"../database\";\nexport class CourseService {\n  list() {\n    return courses;\n  }\n  save(course: Course) {\n    courses.push(course);\n  }\n  getById(id: number) {\n    for (const course of courses) {\n      if (course.id == id) {\n        return course;\n      }\n    }\n    throw new Error(\"Curso não Encontrado\");\n  }\n}\n","import { Course } from \"../course/Course\";\nimport { Student } from \"./Student\";\nimport { StudentService } from \"./StudentService\";\nimport { CourseService } from \"../course/CourseService\";\n\nconst iptName = document.getElementById(\"iptName\") as HTMLInputElement;\nconst btnSave = document.getElementById(\"btnSave\") as HTMLButtonElement;\nconst btnList = document.getElementById(\"btnList\") as HTMLButtonElement;\nconst iptEmail = document.getElementById(\"iptEmail\") as HTMLInputElement;\nconst tblStudent = document.getElementById(\"tblStudent\") as HTMLTableElement;\nconst frmStudent = document.getElementById(\"frmStudent\") as HTMLFormElement;\nconst iptYearBirth = document.getElementById(\n  \"iptYearBirth\"\n) as HTMLInputElement;\n\nconst selectCourse = document.getElementById(\n  \"selectCourse\"\n) as HTMLSelectElement;\n\nlet student: Student;\nlet course: Course;\nlet studentService = new StudentService();\nconst courseService = new CourseService();\n\nfunction saveStudent(event: Event) {\n  event.preventDefault();\n  try {\n    const course = courseService.getById(Number(selectCourse.value));\n    //  course = new Course(selectCourse.options[selectCourse.selectedIndex].text);\n    student = new Student(iptName.value, course);\n    student.setEmail(iptEmail.value);\n    student.yearBirth = Number(iptYearBirth.value);\n    studentService.saveStudent(student);\n    frmStudent.reset();\n  } catch (error) {\n    alert(error);\n  }\n  listStudent();\n}\nfunction listStudent() {\n  tblStudent.innerHTML = \"\";\n  for (student of studentService.listStudent()) {\n    tblStudent.innerHTML =\n      tblStudent.innerHTML +\n      ` <tr>\n    <td id=\"\">${student.getName()}</td>\n    <td>${student.getEmail()}</td>\n    <td>${student.yearBirth}</td>\n    <td>${student.getAge()}</td>\n    <td>${student.course.name} </td>\n  </tr> `;\n  }\n}\n\nfunction listCourse() {\n  for (const course of courseService.list()) {\n    selectCourse.innerHTML =\n      selectCourse.innerHTML +\n      `<option value=${course.id}> ${course.name} </option> `;\n  }\n}\nlistCourse();\n\nfrmStudent.addEventListener(\"submit\", saveStudent);\n//btnSave.addEventListener(\"click\", saveStudent);\nbtnList.addEventListener(\"click\", listStudent);\n"]}