{"version":3,"sources":["src\\Person.ts","src\\student\\Student.ts","src\\course\\Course.ts","src\\subject\\Subject.ts","src\\database.ts","src\\student\\StudentService.ts","src\\subject\\SubjectService.ts","src\\registry\\Registry.ts","src\\registry\\RegistryService.ts","src\\registry\\registryView.ts"],"names":[],"mappings":"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","file":"7bd1a8588c423c9977582f4d424a34a0.map","sourcesContent":["import { Address } from \"./Address\";\nexport abstract class Person {\n  readonly id: number;\n  private name: string;\n  private email!: string;\n  yearBirth!: number;\n  address!: Address;\n\n  constructor(name: string) {\n    this.name = name;\n    this.id = Math.floor(Math.random() * 50) + 5001;\n  }\n\n  getAge() {\n    return new Date().getFullYear() - this.yearBirth;\n  }\n\n  getName() {\n    return this.name;\n  }\n  getEmail() {\n    return this.email;\n  }\n  setEmail(email: string) {\n    if (!email.includes(\"@\")) {\n      throw new Error(\"Email Inválido\");\n    }\n    this.email = email;\n  }\n}\n","import { Person } from \"../Person\";\nimport { Course } from \"../course/Course\";\n\nexport class Student extends Person {\n  course: Course;\n  constructor(name: string, course: Course) {\n    super(name);\n    this.course = course;\n  }\n}\n","export class Course {\n  id: number;\n  name: string;\n\n  constructor(name: string) {\n    this.id = Math.floor(Math.random() * 5000);\n    this.name = name;\n  }\n}\n","import { Course } from \"../course/Course\";\nexport class Subject {\n  readonly id: number;\n  constructor(public name: string, public course: Course) {\n    this.name = name;\n    this.course = course;\n    this.id = Math.floor(Math.random() * 5000);\n  }\n}\n","import { Student } from \"./student/Student\";\nimport { Professor } from \"./professor/Professor\";\nimport { Course } from \"./course/Course\";\nimport { Subject } from \"./subject/Subject\";\nimport { Registry } from \"./registry/Registry\";\n\nexport const students: Student[] = [];\n\nexport const professors: Professor[] = [];\n\nconst bsi = new Course(\"BSI\");\nconst tsi = new Course(\"TSI\");\nconst licenciatura = new Course(\"Licenciatura\");\nexport const courses: Course[] = [];\ncourses.push(bsi, tsi, licenciatura);\n\nconst poo = new Subject(\"POO\", bsi);\nconst web = new Subject(\"Web\", tsi);\nexport const subjects: Subject[] = [];\nsubjects.push(poo, web);\n\nconst student1 = new Student(\"Adair\", tsi);\nconst student2 = new Student(\"Rohlig\", bsi);\nstudents.push(student1, student2);\n\nexport const registries: Registry[] = [];\n","import { Student } from \"./Student\";\nimport { students } from \"../database\";\n\nexport class StudentService {\n  saveStudent(student: Student) {\n    students.push(student);\n  }\n  listStudent() {\n    return students;\n  }\n  getById(id: number) {\n    for (const student of students) {\n      if (student.id == id) {\n        return student;\n      }\n    }\n    throw new Error(\"Estudante não Encontrado\");\n  }\n}\n","import { Subject } from \"./Subject\";\nimport { subjects } from \"../database\";\nexport class SubjectService {\n  save(subject: Subject) {\n    subjects.push(subject);\n  }\n  list() {\n    return subjects;\n  }\n  getById(id: number) {\n    for (const subject of subjects) {\n      if (subject.id == id) {\n        return subject;\n      }\n    }\n    throw new Error(\"Não encontrou a Disciplina\");\n  }\n}\n","import { Student } from \"../student/Student\";\nimport { Subject } from \"../subject/Subject\";\n\nexport class Registry {\n  constructor(public student: Student, public subjects: Subject[]) {}\n}\n","import { Registry } from \"./Registry\";\nimport { registries } from \"../database\";\n\nexport class RegistryService {\n  save(registry: Registry) {\n    registries.push(registry);\n  }\n}\n","import { StudentService } from \"../student/StudentService\";\nimport { Subject } from \"../subject/Subject\";\nimport { SubjectService } from \"../subject/SubjectService\";\nimport { Registry } from \"./Registry\";\nimport { RegistryService } from \"./RegistryService\";\nconst selectStudent = document.getElementById(\n  \"selectStudent\"\n) as HTMLSelectElement;\n\nconst selectSubject = document.getElementById(\n  \"selectSubject\"\n) as HTMLSelectElement;\n\nconst frmRegistry = document.getElementById(\"frmRegistry\") as HTMLFormElement;\nconst subjectService = new SubjectService();\n\nfunction save(event: Event) {\n  event.preventDefault();\n  try {\n    const studentService = new StudentService();\n    const registryService = new RegistryService();\n    const student = studentService.getById(\n      Number(frmRegistry.selectStudent.value)\n    );\n    const subjects: Subject[] = [];\n    const formData = new FormData(frmRegistry);\n    for (let id of formData.getAll(\"subjects\")) {\n      const subject = subjectService.getById(Number(id));\n      subjects.push(subject);\n    }\n    const registry = new Registry(student, subjects);\n    registryService.save(registry);\n  } catch (error) {\n    alert(error);\n  }\n}\nfunction listSubject() {\n  for (const subject of subjectService.list()) {\n    selectSubject.innerHTML =\n      selectSubject.innerHTML +\n      `\n    <option value=${subject.id}> ${subject.name} </option>\n    `;\n  }\n}\nlistSubject();\n\nfunction listStudent() {\n  const studentService = new StudentService();\n  for (let student of studentService.listStudent()) {\n    selectStudent.innerHTML =\n      selectStudent.innerHTML +\n      `<option value=${student.id}> ${student.getName()} - ${\n        student.course.name\n      } </option>\n`;\n  }\n}\nlistStudent();\n\nfrmRegistry.addEventListener(\"submit\", save);\n"]}